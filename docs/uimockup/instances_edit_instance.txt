+---------------------------------------------------------------------------+
| RedHat Shadow Manager                                                     |
+---------------------------------------------------------------------------+
| (Events)    (Machines)    Instances    (Images)    (Accounts)   (Setup) |
| Viewing and editing instance:  (virtual-foo5) of (virtual-foo) on (acmelabs2)
|
| Change state to:   { stopped    }           !Change!
| Migrate to:        { acmelabs1  }           !Migrate!
| Image update policy:   { automatic|off }    !Change!
|
| Configuration:
|     [       INSERT VENDOR SUPPLIED CONFIGURATION PANELS HERE  ]
|
| Metrics
| 
|     [       INSERT OUR COMMON METRICS PANEL HERE    ]
|     [       INSERT VENDOR PLUGIN METRICS HERE       ]
|
| Event Log:
|     12/25/06     acmelabs5     CRITICAL
|     machine crashed.
|
|     12/24/06     acmelabs4     INFORMATIONAL
|     message from vendor software:  "the reindeer are accounted for"

|

|
+--------------------------------------------------------------------------+

Viewing and Editing a deployed image instance.

This shows metrics, eventing, and configuration for a specific instance of
a virtual machine.  What's cool here is that the vendor can contribute
metrics (monitoring data) and such and even configuration options over
the message bus (we need to do this offline too, probably) so that everything
looks the same, and other web UI's and configuration means aren't needed.
It's all seamless.

At the top of the screen, the name of the system that currently hosts the
VM is listed, and there is also a link to the VM definition.  Migration
happens from this page, and the machine state can also be toggled.

The event log related to this instance being on this page as well as
the event page is another example of the ease of use plan.  Information
is displayed where it's relevant, as information about events may affect
migration or start/stop decisions, for instance.  Humans also have relatively
limited short term memory, so having more data available in one place is 
a good thing.

The update policy is tricky.  If the vendor of an appliance (which could
be in-house, maybe not) updates an image and wants to roll out a new
one, updating that image (especially if it's a disk image with important
data inside) seems somewhat tricky.  However if all data is stored
on a SAN, that isn't so tricky, but means saving configuration in the
database (not just in the image) and reapplying that change later.  Still
this is pretty complicated without knowing how ISV's are going to create
images and what the update system is.  Thoughts?


